[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cloudwarden"
version = "3.0.0"
description = "CloudWarden v3 - Revolutionary AI-Powered Cloud Security Platform"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Nova Titan Systems", email = "support@novatitan.net"}
]
requires-python = ">=3.11"
keywords = ["cloud-security", "aws", "iot", "ai", "cybersecurity", "compliance"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators", 
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
]

dependencies = [
    "boto3==1.34.162",
    "botocore>=1.34.162,<1.35.0",
    "s3transfer>=0.10.0,<0.11.0",
    "click>=8.1.7",
    "python-dotenv>=1.0.1",
    "pyyaml>=6.0.1",
    "jsonschema>=4.23.0", 
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "networkx>=3.3",
    "matplotlib>=3.7.0",
    "plotly>=5.17.0",
    "langchain>=0.1.0",
    "ollama>=0.1.7",
    "streamlit>=1.28.0",
    "jinja2>=3.1.0",
    "reportlab>=4.0.0",
    "fpdf2>=2.7.0",
    "cryptography>=41.0.0",
    "pyopenssl>=23.0.0",
    "rich>=13.7.0",
    "tabulate>=0.9.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "moto>=4.2.0",
    "ruff>=0.1.0",
    "black>=23.0.0", 
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "pip-audit>=2.6.0",
]

[project.scripts]
cloudwarden = "scripts.run:main"
cloudwarden-app = "cloudwarden_app:main"

[tool.setuptools.packages.find]
include = ["cloudwarden*", "scripts*"]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.black]
line-length = 88
target-version = ['py311']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=cloudwarden"
